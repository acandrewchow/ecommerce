{"ast":null,"code":"import { initializeApp } from \"firebase/app\";\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider } from \"firebase/auth\";\nimport { getFirestore, doc,\n// retrieves documents from Firestore data base\ngetDoc,\n// getting documents data \nsetDoc // setting document data\n} from 'firebase/firestore';\n\n// Import the functions you need from the SDKs you need\n//import { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDin_6rtTjSSFBuvnlcxuZsRy8VRkkUUwA\",\n  authDomain: \"ecommerce-clothing-4d687.firebaseapp.com\",\n  projectId: \"ecommerce-clothing-4d687\",\n  storageBucket: \"ecommerce-clothing-4d687.appspot.com\",\n  messagingSenderId: \"1092420712689\",\n  appId: \"1:1092420712689:web:077a19b09202804bcd9150\",\n  measurementId: \"G-DY4EMZ572Y\"\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n//const analytics = getAnalytics(app);\n\nconst provider = new GoogleAuthProvider();\nprovider.setCustomParameters({\n  prompt: \"select_account\"\n});\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n// Instantiate our fire store data base\nexport const db = getFirestore();\nexport const createUserDocumentFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log(userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log(userSnapshot);\n\n  // checks if a user exists in the document within the db\n  console.log(userSnapshot.exists());\n\n  // if user data does not exist\n  // create and set the document with the data from the userAuth in my collection\n  if (!userSnapshot.exists()) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n    try {\n      await setDoc(userDocRef, {\n        displayName,\n        email,\n        createdAt\n      });\n    } catch (error) {\n      console.log('Error creating the user', error.message);\n    }\n  }\n  // if user data exists\n  return userDocRef;\n\n  // return user document reference\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseApp","provider","setCustomParameters","prompt","auth","signInWithGooglePopup","db","createUserDocumentFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","displayName","email","createdAt","Date","error","message"],"sources":["/Users/andrewchow/Desktop/project/ecommerce/src/utils/firebase/firebase.utils.js"],"sourcesContent":["import { initializeApp } from \"firebase/app\";\nimport {\n  getAuth,\n  signInWithRedirect,\n  signInWithPopup,\n  GoogleAuthProvider,\n} from \"firebase/auth\";\n\nimport {\n    getFirestore,\n    doc, // retrieves documents from Firestore data base\n    getDoc, // getting documents data \n    setDoc, // setting document data\n} from 'firebase/firestore';\n\n// Import the functions you need from the SDKs you need\n//import { getAnalytics } from \"firebase/analytics\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDin_6rtTjSSFBuvnlcxuZsRy8VRkkUUwA\",\n  authDomain: \"ecommerce-clothing-4d687.firebaseapp.com\",\n  projectId: \"ecommerce-clothing-4d687\",\n  storageBucket: \"ecommerce-clothing-4d687.appspot.com\",\n  messagingSenderId: \"1092420712689\",\n  appId: \"1:1092420712689:web:077a19b09202804bcd9150\",\n  measurementId: \"G-DY4EMZ572Y\",\n};\n\n// Initialize Firebase\nconst firebaseApp = initializeApp(firebaseConfig);\n//const analytics = getAnalytics(app);\n\nconst provider = new GoogleAuthProvider();\n\nprovider.setCustomParameters({\n  prompt: \"select_account\",\n});\n\nexport const auth = getAuth();\nexport const signInWithGooglePopup = () => signInWithPopup(auth, provider);\n\n// Instantiate our fire store data base\nexport const db = getFirestore();\n\nexport const createUserDocumentFromAuth = async (userAuth) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n\n    console.log(userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef);\n    console.log(userSnapshot);\n\n    // checks if a user exists in the document within the db\n    console.log(userSnapshot.exists());\n\n\n    \n\n    // if user data does not exist\n    // create and set the document with the data from the userAuth in my collection\n    if (!userSnapshot.exists()) {\n        const { displayName, email } = userAuth;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {\n                displayName,\n                email,\n                createdAt\n            });\n        } catch (error) {\n            console.log('Error creating the user', error.message);\n        }\n    }\n    // if user data exists\n    return userDocRef;\n\n    // return user document reference\n};\n\n"],"mappings":"AAAA,SAASA,aAAa,QAAQ,cAAc;AAC5C,SACEC,OAAO,EACPC,kBAAkB,EAClBC,eAAe,EACfC,kBAAkB,QACb,eAAe;AAEtB,SACIC,YAAY,EACZC,GAAG;AAAE;AACLC,MAAM;AAAE;AACRC,MAAM,CAAE;AAAA,OACL,oBAAoB;;AAE3B;AACA;AACA;AACA;;AAEA;AACA;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCAAyC;EACjDC,UAAU,EAAE,0CAA0C;EACtDC,SAAS,EAAE,0BAA0B;EACrCC,aAAa,EAAE,sCAAsC;EACrDC,iBAAiB,EAAE,eAAe;EAClCC,KAAK,EAAE,4CAA4C;EACnDC,aAAa,EAAE;AACjB,CAAC;;AAED;AACA,MAAMC,WAAW,GAAGjB,aAAa,CAACS,cAAc,CAAC;AACjD;;AAEA,MAAMS,QAAQ,GAAG,IAAId,kBAAkB,EAAE;AAEzCc,QAAQ,CAACC,mBAAmB,CAAC;EAC3BC,MAAM,EAAE;AACV,CAAC,CAAC;AAEF,OAAO,MAAMC,IAAI,GAAGpB,OAAO,EAAE;AAC7B,OAAO,MAAMqB,qBAAqB,GAAG,MAAMnB,eAAe,CAACkB,IAAI,EAAEH,QAAQ,CAAC;;AAE1E;AACA,OAAO,MAAMK,EAAE,GAAGlB,YAAY,EAAE;AAEhC,OAAO,MAAMmB,0BAA0B,GAAG,MAAOC,QAAQ,IAAK;EAC1D,MAAMC,UAAU,GAAGpB,GAAG,CAACiB,EAAE,EAAE,OAAO,EAAEE,QAAQ,CAACE,GAAG,CAAC;EAEjDC,OAAO,CAACC,GAAG,CAACH,UAAU,CAAC;EAEvB,MAAMI,YAAY,GAAG,MAAMvB,MAAM,CAACmB,UAAU,CAAC;EAC7CE,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;;EAEzB;EACAF,OAAO,CAACC,GAAG,CAACC,YAAY,CAACC,MAAM,EAAE,CAAC;;EAKlC;EACA;EACA,IAAI,CAACD,YAAY,CAACC,MAAM,EAAE,EAAE;IACxB,MAAM;MAAEC,WAAW;MAAEC;IAAM,CAAC,GAAGR,QAAQ;IACvC,MAAMS,SAAS,GAAG,IAAIC,IAAI,EAAE;IAE5B,IAAI;MACA,MAAM3B,MAAM,CAACkB,UAAU,EAAE;QACrBM,WAAW;QACXC,KAAK;QACLC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC,OAAOE,KAAK,EAAE;MACZR,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEO,KAAK,CAACC,OAAO,CAAC;IACzD;EACJ;EACA;EACA,OAAOX,UAAU;;EAEjB;AACJ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}